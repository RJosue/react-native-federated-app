# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Pipeline ðŸš€

on:
  push:
    branches: ["master"]

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Create .yarnrc.yaml
        run: |
          echo "npmAlwaysAuth: true" >> ~/.yarnrc.yml
          echo "npmRegistryServer: ${{ secrets.NPM_REGISTRY_SERVER }}" >> ~/.yarnrc.yml
          echo "npmAuthIdent: ${{ secrets.NPM_AUTH_IDENT }}" >> ~/.yarnrc.yml
      - name: Install dependencies
        run: yarn install
      - name: Cache Dependencies
        uses: actions/cache@v2
        id: node_modules_cache
        with:
          path: ./node_modules
          key: ${{ github.sha }}

  build-android:
    needs: install-dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Cache build Android
        uses: actions/cache@v2
        id: node_modules_cache
        with:
          path: |
            ./node_modules/*
            ./app1/build/android/*
            ./app2/build/android/*
          key: ${{ github.sha }}
      - name: Build Apps
        continue-on-error: true
        run: yarn build:android

  build-ios:
    needs: install-dependencies
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Cache build iOS
        uses: actions/cache@v2
        id: node_modules_cache
        with:
          path: |
            ./node_modules/*
            ./app1/build/ios/*
            ./app2/build/ios/*
          key: ${{ github.sha }}
      - name: Build Apps
        continue-on-error: true
        run: yarn build:ios

  deploy:
    needs: [build-android, build-ios]
    runs-on: ubuntu-latest
    steps:
      - name: Get Cache
        uses: actions/cache@v2
        id: node_modules_cache
        with:
          path: |
            ./node_modules/*
            ./app1/build/ios/*
            ./app1/build/ios/*
            ./app2/build/android/*
            ./app2/build/android/*
          key: ${{ github.sha }}
      - name: "Configure AWS Credentials"
        uses: "aws-actions/configure-aws-credentials@v1"
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: "Send builds to S3 Bucket"
        run: |
          aws s3 cp ./app1/build/ s3://${{ secrets.AWS_S3_BUCKET }}/app1/ --recursive
